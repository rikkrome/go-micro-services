# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: accounts_service
        ports:
          - 5432:5432
        options: 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
           --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          cd services/accounts-service
          go mod download

      - name: Build
        run: |
          cd services/accounts-service
          go build -mod=mod -v .
      - name: Wait for PostgreSQL to start
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to start..."
            sleep 2
          done
      
      - name: Test
        env:
          SQL_DSN: postgres://postgres:postgres@localhost:5432/accounts_service?sslmode=disable
        run: |
          cd services/accounts-service
          go test -mod=mod ./...
      
